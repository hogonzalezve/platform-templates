apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: app-model-a-request-with-random-suffix
  title: Deploy AppModelA Application (with Random Suffix)
  description: Creates a request for deploying an application using AppModelA Promise in Kratix with unique random naming
  tags:
    - kratix
    - application
    - kubernetes
    - deployment
    - random-naming
spec:
  owner: platform-team
  type: service
  parameters:
    - title: Application Information
      required:
        - appName
        - targetNamespace
        - image
      properties:
        appName:
          title: Application Name
          type: string
          description: Base name of your application (a random suffix will be added)
          pattern: '^[a-z0-9-]+$'
          ui:autofocus: true
          ui:help: "Only lowercase letters, numbers and hyphens allowed. A random suffix will be automatically added."
        targetNamespace:
          title: Target Namespace
          type: string
          description: Kubernetes namespace where the application will be deployed
          default: "default"
          pattern: '^[a-z0-9-]+$'
          ui:help: "Namespace must exist in the target cluster"
        image:
          title: Container Image
          type: string
          description: Full container image path (registry/image:tag)
          default: "nginx:latest"
          ui:help: "Example: registry.hub.docker.com/library/nginx:1.21"
        
    # ... resto de parameters igual que el original ...

  steps:
    # NUEVO STEP: Generar sufijo aleatorio
    - id: generate-unique-suffix
      name: Generate Unique Suffix
      action: ntt:utils:randomSuffix
      input:
        length: 4
        type: 'alphanumeric'
        prefix: '-'

    # STEP MODIFICADO: Usar el sufijo en el template
    - id: fetch
      name: Fetch Base Template
      action: fetch:template
      input:
        url: ./skeleton
        values:
          # Usar el sufijo aleatorio para crear nombres únicos
          appName: ${{ parameters.appName }}${{ steps['generate-unique-suffix'].output.fullSuffix }}
          baseAppName: ${{ parameters.appName }}
          uniqueSuffix: ${{ steps['generate-unique-suffix'].output.suffix }}
          targetNamespace: ${{ parameters.targetNamespace }}
          image: ${{ parameters.image }}
          port: ${{ parameters.port }}
          replicas: ${{ parameters.replicas }}
          serviceType: ${{ parameters.serviceType }}
          imagePullPolicy: ${{ parameters.imagePullPolicy }}
          gatewayEnabled: ${{ parameters.gatewayEnabled }}
          gatewayHostname: ${{ parameters.gatewayHostname }}
          gatewayPath: ${{ parameters.gatewayPath }}
          gatewayTls: ${{ parameters.gatewayTls }}
          storageEnabled: ${{ parameters.storageEnabled }}
          storageSize: ${{ parameters.storageSize }}
          storageMountPath: ${{ parameters.storageMountPath }}
          storageClass: ${{ parameters.storageClass }}
          databaseEnabled: ${{ parameters.databaseEnabled }}
          databaseType: ${{ parameters.databaseType }}
          databaseStorageGB: ${{ parameters.databaseStorageGB }}
          databaseInstanceSize: ${{ parameters.databaseInstanceSize }}
          requestNamespace: ${{ parameters.requestNamespace }}
          # Usar el nombre único con sufijo para identificadores
          uniqueName: "${{ parameters.appName }}${{ steps['generate-unique-suffix'].output.fullSuffix }}"
          uniqueFilename: "${{ parameters.appName }}-${{ steps['generate-unique-suffix'].output.suffix }}-${{ parameters.targetNamespace }}-request"

    - id: publish
      name: Publish to platform-workflow
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=platform-workflow&owner=hogonzalezve
        branchName: "app-request-${{ parameters.appName }}-${{ steps['generate-unique-suffix'].output.suffix }}"
        title: "Deploy ${{ parameters.appName }}${{ steps['generate-unique-suffix'].output.fullSuffix }} via AppModelA"
        description: |
          ## New AppModelA Application Request with Unique Naming
          
          **Application:** ${{ parameters.appName }}${{ steps['generate-unique-suffix'].output.fullSuffix }}
          **Base Name:** ${{ parameters.appName }}
          **Unique Suffix:** ${{ steps['generate-unique-suffix'].output.suffix }}
          **Namespace:** ${{ parameters.targetNamespace }}
          **Image:** ${{ parameters.image }}
          **Replicas:** ${{ parameters.replicas }}
          
          This deployment uses an automatically generated unique suffix to prevent naming conflicts.
        targetPath: .
        update: true

  output:
    links:
      - title: Repository Commit
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Application Request File
        url: "${{ steps.publish.output.remoteUrl }}/blob/main/kratix/requests/${{ parameters.appName }}-${{ steps['generate-unique-suffix'].output.suffix }}-${{ parameters.targetNamespace }}-request.yaml"
      - title: ArgoCD Applications
        url: https://argocd.your-domain.com/applications
      - title: Kratix Platform State
        url: https://github.com/hogonzalezve/platform-state
    text:
      - title: Generated Application Name
        content: "${{ parameters.appName }}${{ steps['generate-unique-suffix'].output.fullSuffix }}"
      - title: Unique Suffix
        content: "${{ steps['generate-unique-suffix'].output.suffix }}"